// src/services/oauthService.js
import * as WebBrowser from "expo-web-browser";
import * as Google from "expo-auth-session/providers/google";
import { GoogleAuthProvider, signInWithCredential } from "firebase/auth";
import { auth } from "./firebaseConfig";
import { useNavigation } from "@react-navigation/native";
import { useEffect } from "react";

WebBrowser.maybeCompleteAuthSession();

export const useGoogleAuth = (onLoginSuccess) => {
  const navigation = useNavigation();

  // T·∫°o request OAuth Google
  const [request, response, promptAsync] = Google.useAuthRequest({
    expoClientId: "922974471929-grpuu60g2drbkd81qevpugk8h7s1kmv1.apps.googleusercontent.com",
    webClientId: "922974471929-grpuu60g2drbkd81qevpugk8h7s1kmv1.apps.googleusercontent.com",
    redirectUri: "https://auth.expo.io/@sowsd1/envi-app",
  });

  // Khi c√≥ ph·∫£n h·ªìi t·ª´ Google
  useEffect(() => {
    if (response?.type === "success") {
      const { authentication } = response;

      // T·∫°o credential cho Firebase
      const credential = GoogleAuthProvider.credential(null, authentication.accessToken);

      // ƒêƒÉng nh·∫≠p Firebase
      signInWithCredential(auth, credential)
        .then((userCredential) => {
          console.log("‚úÖ ƒêƒÉng nh·∫≠p Google th√†nh c√¥ng:", userCredential.user.email);

          if (onLoginSuccess) onLoginSuccess(userCredential.user);

          // üëâ Chuy·ªÉn sang HomeScreen sau khi ƒëƒÉng nh·∫≠p
          navigation.reset({
            index: 0,
            routes: [{ name: "HomeScreen" }],
          });
        })
        .catch((error) => {
          console.error("‚ùå L·ªói Firebase sign-in:", error);
          alert("Kh√¥ng th·ªÉ ƒëƒÉng nh·∫≠p b·∫±ng Google. Vui l√≤ng th·ª≠ l·∫°i!");
        });
    }
  }, [response]);

  // H√†m khi nh·∫•n n√∫t ƒëƒÉng nh·∫≠p Google
  const handleGoogleSignIn = async () => {
    try {
      await promptAsync();
    } catch (error) {
      console.error("‚ùå Google SignIn error:", error);
    }
  };

  return { handleGoogleSignIn };
};